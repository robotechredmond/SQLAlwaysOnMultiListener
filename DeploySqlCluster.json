{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",

  "parameters": {

    "namePrefix": {
      "type": "string"
    },

		"domainName": {
      "type": "string"
    },

		"dnsServerName": {
      "type": "string"
    },

    "adminUsername": {
      "type": "string"
    },

    "adminPassword": {
      "type": "securestring"
    },

    "sqlServerServiceAccountUserName": {
      "type": "string"
    },

    "sqlServerServiceAccountPassword": {
      "type": "securestring"
    },

    "storageAccountType": {
      "type": "securestring"
    },

		"dnsServerName": {
      "type": "string"
    },

		"nicSubnetUri": {
      "type": "string"
    },

    "lbSubnetUri": {
      "type": "string"
    },

		"sqlLBIPAddress1": {
      "type": "string"
    },

    "sqlLBIPAddress2": {
      "type": "string"
    },

    "sqlVMSize": {
      "type": "string"
    },

		"sqlWitnessVMSize": {
      "type": "string"
    },

		"assetLocation": {
      "type": "string"
    },

    "windowsImagePublisher": {
      "type": "string",
      "defaultValue": "MicrosoftSQLServer"
    },

    "windowsImageOffer": {
      "type": "string",
      "defaultValue": "SQL2014SP1-WS2012R2"
    },

    "windowsImageSKU": {
      "type": "string",
      "defaultValue": "Enterprise"
    },

    "windowsImageVersion": {
      "type": "string",
      "defaultValue": "latest"
    }

  },

  "variables": {

    "apiVersion": "2015-01-01",
    "apiVersionNetworks": "2015-06-15",
    "apiVersionVirtualMachines": "2015-06-15",
    "apiVersionVMExtensions": "2015-06-15",
    "apiVersionStorage": "2015-06-15",

		"sqlDiskSize": 1000,
		"sqlWitnessDiskSize": 128,

    "sqlNamePrefix": "[concat(parameters('namePrefix'),'-sql-')]",
		"sqlAvailabilitySetName": "[concat(variables('sqlNamePrefix'),'as')]",

		"sqlLBName": "[concat(variables('sqlNamePrefix'),'ilb')]",
		"sqllbID":"[resourceId('Microsoft.Network/loadBalancers',variables('sqlLBName'))]",
		"lbFE1": "[concat(variables('sqlNamePrefix'),'ilbfe1')]",
    "lbFE2": "[concat(variables('sqlNamePrefix'),'ilbfe2')]",
		"lbBE": "[concat(variables('sqlNamePrefix'),'ilbbe')]",
		"sqlLBID":"[resourceId('Microsoft.Network/loadBalancers',variables('sqlLBName'))]",
    "sqlLBFEConfigID1": "[concat(variables('sqllbID'),'/frontendIPConfigurations/',variables('lbFE1'))]",
    "sqlLBFEConfigID2": "[concat(variables('sqllbID'),'/frontendIPConfigurations/',variables('lbFE2'))]",
    "sqlLBBEAddressPoolID": "[concat(variables('sqllbID'),'/backendAddressPools/',variables('lbBE'))]",
		"sqlAOProbe1": "[concat(variables('sqlNamePrefix'),'ilbp1')]",
    "sqlLBProbeID1":"[concat(variables('sqllbID'),'/probes/',variables('sqlAOProbe1'))]",
		"sqlAOProbe2":"[concat(variables('sqlNamePrefix'),'ilbp2')]",
    "sqlLBProbeID2":"[concat(variables('sqllbID'),'/probes/',variables('sqlAOProbe2'))]",

		"sqlStorageAccountPrefix": "[concat(parameters('namePrefix'),'sqlstor')]",
		"sqlWitnessStorageAccountName": "[concat(parameters('namePrefix'),'sqlstorw')]",
    "vmContainerName": "vhds",

		"deploySqlWitnessShare": "deploySqlWitnessShare",
    "deploySqlWitnessShareId": "[concat('Microsoft.Resources/deployments/', variables('deploySqlWitnessShare'))]",
    "deploySqlWitnessShareTemplateUrl": "[concat(parameters('assetLocation'),'/DeploySqlWitnessShare.json')]",
    "sqlWitnessSharePath" : "[concat(parameters('namePrefix'),'-fsw')]",
    "sqlWitnessVMName": "[concat(variables('sqlNamePrefix'),'w')]",

		"deploySqlAlwaysOn": "deploySqlAlwaysOn",
    "deploySqlAlwaysOnTemplateUrl": "[concat(parameters('assetLocation'),'/DeploySqlAlwaysOn.json')]",
		"sqlClusterName": "[concat(parameters('namePrefix'),'-sql-c')]",
		"sqlAOEPName": "[concat(parameters('namePrefix'),'-agep')",
		"sqlAOAGName1": "[concat(parameters('namePrefix'),'-ag1')]",
		"sqlAOAGName2": "[concat(parameters('namePrefix'),'-ag2')]",
    "sqlAOListener1":"[concat(parameters('namePrefix'),'-agl1')]",
		"sqlAOListener2":"[concat(parameters('namePrefix'),'-agl2')]"

  },

  "resources": [

		{
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('sqlAvailabilitySetName')]",
      "apiVersion": "[variables('apiVersionNetworks')]",
      "location": "[resourceGroup().location]"
    },

    {
			"type": "Microsoft.Storage/storageAccounts",
			"name": "[concat(variables('sqlStorageAccountPrefix'), copyindex())]",
      "apiVersion": "[variables('apiVersionStorage')]",
      "copy": {
				"name": "storageAccountLoop",
				"count": 2
			},
			"location": "[resourceGroup().location]",
			"properties": {
				"accountType": "[parameters('storageAccountType')]"
			}
		},

		{
			"type": "Microsoft.Storage/storageAccounts",
			"name": "[variables('sqlWitnessStorageAccountName')]",
      "apiVersion": "[variables('apiVersionStorage')]",
			"location": "[resourceGroup().location]",
			"properties": {
				"accountType": "[parameters('storageAccountType')]"
			}
		},

    {
			"apiVersion": "[variables('apiVersionNetworks')]",
			"name": "[variables('sqlLBName')]",
			"type": "Microsoft.Network/loadBalancers",
			"location": "[resourceGroup().location]",
			"dependsOn": [
			],
			"properties": {
				"frontendIPConfigurations": [
					{
						"name": "[variables('lbFE1')]",
						"properties": {
							"privateIPAllocationMethod": "Static",
							"privateIPAddress" :"[parameters('sqlLBIPAddress1')]",
							"subnet": {
								"id": "[parameters('lbSubnetUri')]"
							}
						}
					},
          {
						"name": "[variables('lbFE2')]",
						"properties": {
							"privateIPAllocationMethod": "Static",
							"privateIPAddress" :"[parameters('sqlLBIPAddress2')]",
							"subnet": {
								"id": "[parameters('lbSubnetUri')]"
							}
						}
					}
				],
				"backendAddressPools": [
					{
						"name": "[variables('lbBE')]"
					}
				],
				"loadBalancingRules": [
					{
						"name": "[variables('sqlAOListener1')]",
						"properties": {
						"frontendIPConfiguration": {
							"id": "[variables('sqlLBFEConfigID1')]"
						},
						"backendAddressPool": {
							"id": "[variables('sqlLBBEAddressPoolID')]"
						},
						"probe": {
							"id": "[variables('sqlLBProbeID1')]"
						},
						"protocol": "Tcp",
						"frontendPort": 1433,
						"backendPort": 1433,
						"enableFloatingIP": true
						}
					},
          {
						"name": "[variables('sqlAOListener2')]",
						"properties": {
						"frontendIPConfiguration": {
							"id": "[variables('sqlLBFEConfigID2')]"
						},
						"backendAddressPool": {
							"id": "[variables('sqlLBBEAddressPoolID')]"
						},
						"probe": {
							"id": "[variables('sqlLBProbeID2')]"
						},
						"protocol": "Tcp",
						"frontendPort": 1433,
						"backendPort": 1434,
						"enableFloatingIP": true
						}
					}
				],
				"probes": [
					{
						"name": "[variables('sqlAOProbe1')]",
						"properties": {
							"protocol": "Tcp",
							"port": 59999,
							"intervalInSeconds": 5,
							"numberOfProbes": 2
						}
					},
					{
						"name": "[variables('sqlAOProbe2')]",
						"properties": {
							"protocol": "Tcp",
							"port": 59998,
							"intervalInSeconds": 5,
							"numberOfProbes": 2
						}
					}
				]
			}
		},

    {
			"name": "[concat(variables('sqlNamePrefix'), copyindex(), '-nic')]",
			"type": "Microsoft.Network/networkInterfaces",
			"location": "[resourceGroup().location]",
			"apiVersion": "[variables('apiVersionNetworks')]",
			"copy": {
				"name": "nicLoop",
				"count": 2
			},
			"dependsOn": [
				"[variables('sqlLBID')]"
			],
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"subnet": {
								"id": "[parameters('nicSubnetUri')]"
							},
							"loadBalancerBackendAddressPools": [
								{
									"id":"[variables('sqlLBBEAddressPoolID')]"
								}
							]
						}
					}
				]
			}
		},

    {
			"name": "[concat(variables('sqlWitnessVMName'), '-nic')]",
			"type": "Microsoft.Network/networkInterfaces",
			"location": "[resourceGroup().location]",
			"apiVersion": "[variables('apiVersionNetworks')]",
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"subnet": {
								"id": "[parameters('nicSubnetUri')]"
							}
						}
					}
				]
			}
		},

    {
			"apiVersion": "[variables('apiVersionVirtualMachines')]",
			"type": "Microsoft.Compute/virtualMachines",
			"name": "[concat(variables('sqlNamePrefix'), copyindex())]",
			"location": "[resourceGroup().location]",
			"copy": {
				"name": "virtualMachineLoop",
				"count": 2
			},
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts',concat(variables('sqlStorageAccountPrefix'),  copyindex()))]",
				"[resourceId('Microsoft.Network/networkInterfaces',concat(variables('sqlNamePrefix'), copyindex(), '-nic'))]",
				"[resourceId('Microsoft.Compute/availabilitySets', variables('sqlAvailabilitySetName'))]"
			],
			"properties": {
				"hardwareProfile": {
					"vmSize": "[parameters('SqlVMSize')]"
				},
				"availabilitySet": {
					"id": "[resourceId('Microsoft.Compute/availabilitySets', variables('sqlAvailabilitySetName'))]"
				},
				"osProfile": {
					"computerName": "[concat(variables('sqlNamePrefix'), copyindex())]",
					"adminUsername": "[parameters('adminUsername')]",
					"adminPassword": "[parameters('adminPassword')]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "[parameters('windowsImagePublisher')]",
						"offer": "[parameters('windowsImageOffer')]",
						"sku": "[parameters('windowsImageSKU')]",
						"version": "[parameters('windowsImageVersion')]"
					},
					"osDisk": {
						"name": "[concat(variables('sqlNamePrefix'), copyindex(), '-osdisk.vhd')]",
						"vhd": {
							"uri": "[concat('http://',variables('sqlStorageAccountPrefix'), copyindex(), '.blob.core.windows.net/', variables('vmContainerName'), '/', variables('sqlNamePrefix'), copyindex(), '-osdisk.vhd')]"
						},
						"caching": "ReadWrite",
						"createOption": "FromImage"
					},
					"dataDisks": [
						{
							"vhd": {
								"uri": "[concat('http://',variables('sqlStorageAccountPrefix'), copyindex(), '.blob.core.windows.net/', variables('vmContainerName'), '/', variables('sqlNamePrefix'), copyindex(), '-datadisk1.vhd')]"
							},
							"name": "[concat(variables('sqlNamePrefix'), copyindex(), '-datadisk1.vhd')]",
							"caching" : "None",
							"createOption": "Empty",
							"diskSizeGB": "[variables('sqlDiskSize')]",
							"lun": 0
						},
						{
							"vhd": {
								"uri": "[concat('http://',variables('sqlStorageAccountPrefix'), copyindex(), '.blob.core.windows.net/', variables('vmContainerName'), '/', variables('sqlNamePrefix'), copyindex(), '-logdisk1.vhd')]"
							},
							"name": "[concat(variables('sqlNamePrefix'), copyindex(), '-logdisk1.vhd')]",
							"caching" : "None",
							"createOption": "Empty",
							"diskSizeGB": "[variables('sqlDiskSize')]",
							"lun": 1
						}
					]
				},
				"networkProfile": {
					"networkInterfaces": [
						{
							"id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('sqlNamePrefix'), copyindex(), '-nic'))]"
						}
					]
				}
			}
		},

		{
			"apiVersion": "[variables('apiVersionVirtualMachines')]",
			"type": "Microsoft.Compute/virtualMachines",
			"name": "[variables('sqlWitnessVMName')]",
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts',variables('sqlWitnessStorageAccountName'))]",
				"[resourceId('Microsoft.Network/networkInterfaces',concat(variables('sqlWitnessVMName'), '-nic'))]",
				"[resourceId('Microsoft.Compute/availabilitySets', variables('sqlAvailabilitySetName'))]"
			],
			"properties": {
				"hardwareProfile": {
					"vmSize": "[parameters('SqlWitnessVMSize')]"
				},
				"availabilitySet": {
					"id": "[resourceId('Microsoft.Compute/availabilitySets', variables('sqlAvailabilitySetName'))]"
				},
				"osProfile": {
					"computerName": "[variables('sqlWitnessVMName')]",
					"adminUsername": "[parameters('adminUsername')]",
					"adminPassword": "[parameters('adminPassword')]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "[parameters('windowsImagePublisher')]",
						"offer": "[parameters('windowsImageOffer')]",
						"sku": "[parameters('windowsImageSKU')]",
						"version": "[parameters('windowsImageVersion')]"
					},
					"osDisk": {
						"name": "[concat(variables('sqlWitnessVMName'), '-osdisk.vhd')]",
						"vhd": {
							"uri": "[concat('http://',variables('sqlWitnessStorageAccountName'), '.blob.core.windows.net/', variables('vmContainerName'), '/', variables('sqlWitnessVMName'), '-osdisk.vhd')]"
						},
						"caching": "ReadWrite",
						"createOption": "FromImage"
					},
					"dataDisks": [
						{
							"vhd": {
								"uri": "[concat('http://',variables('sqlWitnessStorageAccountName'), '.blob.core.windows.net/', variables('vmContainerName'), '/', variables('sqlWitnessVMName'), '-datadisk1.vhd')]"
							},
							"name": "[concat(variables('sqlWitnessVMName'), '-datadisk1.vhd')]",
							"caching" : "None",
							"createOption": "Empty",
							"diskSizeGB": "[variables('sqlWitnessDiskSize')]",
							"lun": 0
						}
					]
				},
				"networkProfile": {
					"networkInterfaces": [
						{
							"id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('sqlWitnessVMName'), '-nic'))]"
						}
					]
				}
			}
		},

    {
      "name": "[variables('deploySqlWitnessShare')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('apiVersion')]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines',variables('sqlWitnessVMName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deploySqlWitnessShareTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "sqlWitnessVMName": { "value": "[variables('sqlWitnessVMName')]" },
          "domainName": { "value": "[parameters('domainName')]" },
          "sharePath": { "value": "[variables('sqlWitnessSharePath')]" },
          "adminUsername": { "value": "[parameters('adminUsername')]" },
          "adminPassword": { "value": "[parameters('adminPassword')]" },
          "assetLocation": { "value": "[parameters('assetLocation')]" }
        }
      }
    },

    {
      "name": "[variables('deploySqlAlwaysOn')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('apiVersion')]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines',concat(variables('sqlNamePrefix'),'0'))]",
				"[resourceId('Microsoft.Compute/virtualMachines',concat(variables('sqlNamePrefix'),'1'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deploySqlAlwaysOnTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "sqlNamePrefix": { "value": "[variables('sqlNamePrefix')]" },
          "domainName": { "value": "[parameters('domainName')]" },
          "namePrefix": { "value": "[parameters('namePrefix')]" },
          "sharePath": { "value": "[variables('sqlWitnessSharePath')]" },
          "sqlWitnessVMName": { "value": "[variables('sqlWitnessVMName')]" },
          "sqlLBName": { "value": "[variables('sqlLBName')]" },
          "sqlLBIPAddress1": { "value": "[parameters('sqlLBIPAddress1')]" },
					"sqlLBIPAddress2": { "value": "[parameters('sqlLBIPAddress2')]" },
          "dnsServerName": { "value": "[parameters('dnsServerName')]" },
          "sqlServerServiceAccountUserName": { "value": "[parameters('sqlServerServiceAccountUserName')]" },
          "sqlServerServiceAccountPassword": { "value": "[parameters('sqlServerServiceAccountPassword')]" },
          "adminUsername": { "value": "[parameters('adminUsername')]" },
          "adminPassword": { "value": "[parameters('adminPassword')]" },
          "assetLocation": { "value": "[parameters('assetLocation')]" },
          "sqlAlwaysOnEndpointName": { "value": "[variables('sqlAOEPName')]" },
          "sqlAlwaysOnAvailabilityGroupName1": { "value": "[variables('sqlAOAGName1')]" },
          "sqlAlwaysOnAvailabilityGroupListenerName1": { "value": "[variables('sqlAOListener1')]" },
					"sqlAlwaysOnAvailabilityGroupName2": { "value": "[variables('sqlAOAGName1')]" },
          "sqlAlwaysOnAvailabilityGroupListenerName2": { "value": "[variables('sqlAOListener2')]" }
        }
      }
    }

  ],

  "outputs": {
  }

}
