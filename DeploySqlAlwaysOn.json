{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",

  "parameters": {
    "sqlNamePrefix": {
      "type": "string"
    },

    "domainName": {
      "type": "string"
    },

    "namePrefix": {
      "type": "string"
    },

    "sharePath": {
      "type": "string"
    },

    "sqlWitnessVMName": {
      "type": "string"
    },

    "sqlLBName": {
      "type": "string"
    },

    "sqlLBIPAddress1": {
      "type": "string"
    },

    "sqlLBIPAddress2": {
      "type": "string"
    },

    "dnsServerName": {
      "type": "string"
    },

    "sqlServerServiceAccountUserName": {
      "type": "string"
    },

   "sqlServerServiceAccountPassword":{
			"type": "securestring"
		},

    "adminUsername": {
      "type": "string"
    },

    "adminPassword": {
      "type": "securestring"
    },

    "sqlAlwaysOnEndpointName": {
      "type": "string"
    },

    "sqlAlwaysOnAvailabilityGroupName1": {
      "type": "string"
    },
    
    "sqlAlwaysOnAvailabilityGroupName2": {
      "type": "string"
    },

    "sqlAlwaysOnAvailabilityGroupListenerName1": {
      "type": "string"
    },
    
    "sqlAlwaysOnAvailabilityGroupListenerName2": {
      "type": "string"
    },

    "assetLocation": {
      "type": "string"
    }

  },

  "variables": {

    "apiVersion": "2015-01-01",
    "apiVersionNetworks": "2015-06-15",
    "apiVersionVirtualMachines": "2015-06-15",
    "apiVersionVMExtensions": "2015-06-15",
    "apiVersionStorage": "2015-06-15",

    "sqlAOPrepareModulesURL":"[concat(parameters('assetLocation'),'/PrepareAlwaysOnSqlServer.ps1.zip')]",
    "sqlAOPrepareConfigurationFunction": "PrepareAlwaysOnSqlServer.ps1\\PrepareAlwaysOnSqlServer",

    "createClusterModulesURL":"[concat(parameters('assetLocation'),'/CreateFailoverCluster.ps1.zip')]",
    "createClusterConfigurationFunction": "CreateFailoverCluster.ps1\\CreateFailoverCluster",
    "clusterName": "[concat(parameters('namePrefix'),'-c')]"

  },

  "resources": [
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('sqlNamePrefix'),'0/sqlAOPrepare')]",
      "apiVersion": "[variables('apiVersionVMExtensions')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
      ],
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.16",
		    "autoUpgradeMinorVersion": false,
        "settings": {
          "wmfVersion": "5.0",
		  "modulesUrl": "[variables('sqlAOPrepareModulesURL')]",
          "configurationFunction": "[variables('sqlAOPrepareConfigurationFunction')]",
          "properties": {
            "domainName": "[parameters('domainName')]",
            "sqlAlwaysOnEndpointName": "[parameters('sqlAlwaysOnEndpointName')]",
            "adminCreds": {
              "userName": "[parameters('adminUserName')]",
              "password": "PrivateSettingsRef:adminPassword"
            },
            "sqlServiceCreds": {
              "userName": "[parameters('sqlServerServiceAccountUserName')]",
              "password": "PrivateSettingsRef:sqlServerServiceAccountPassword"
            }
          }
        },
        "protectedSettings": {
          "items": {
            "adminPassword": "[parameters('adminPassword')]",
            "sqlServerServiceAccountPassword": "[parameters('sqlServerServiceAccountPassword')]"
          }
        }
      }
    },

    {
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"name": "[concat(parameters('sqlNamePrefix'),'1/CreateCluster')]",
			"apiVersion": "[variables('apiVersionVMExtensions')]",
			"location": "[resourceGroup().location]",
			"dependsOn":[
				"[concat('Microsoft.Compute/virtualMachines/',parameters('sqlNamePrefix'),'0/extensions/sqlAOPrepare')]"
			],
			"properties": {
				"publisher": "Microsoft.Powershell",
				"type": "DSC",
				"typeHandlerVersion": "2.16",
				"autoUpgradeMinorVersion": false,
				"settings": {
					"wmfVersion": "5.0",
					"modulesUrl": "[variables('createClusterModulesURL')]",
					"configurationFunction": "[variables('createClusterConfigurationFunction')]",
					"properties": {
						"domainName": "[parameters('domainName')]",
						"clusterName": "[variables('clusterName')]",
						"sharePath": "[concat('\\\\',parameters('sqlWitnessVMName'),'\\',parameters('sharePath'))]",
						"nodes": ["[concat(parameters('sqlNamePrefix'),'0')]","[concat(parameters('sqlNamePrefix'),'1')]"],
						"sqlAlwaysOnEndpointName": "[parameters('sqlAlwaysOnEndpointName')]",
						"sqlAlwaysOnAvailabilityGroupName1": "[parameters('sqlAlwaysOnAvailabilityGroupName1')]",
						"sqlAlwaysOnAvailabilityGroupListenerName1": "[parameters('sqlAlwaysOnAvailabilityGroupListenerName1')]",
						"sqlAlwaysOnAvailabilityGroupListenerPort1": 1433,
            "sqlAlwaysOnAvailabilityGroupListenerProbePort1": 59999,
						"sqlAlwaysOnAvailabilityGroupName2": "[parameters('sqlAlwaysOnAvailabilityGroupName2')]",
						"sqlAlwaysOnAvailabilityGroupListenerName2": "[parameters('sqlAlwaysOnAvailabilityGroupListenerName2')]",
						"sqlAlwaysOnAvailabilityGroupListenerPort2": 1434,
            "sqlAlwaysOnAvailabilityGroupListenerProbePort2": 59998,
						"lbName": "[parameters('sqlLBName')]",
						"lbAddress1": "[parameters('sqlLBIPAddress1')]",
            "lbAddress2": "[parameters('sqlLBIPAddress2')]",
						"primaryReplica": "[concat(parameters('sqlNamePrefix'),'1')]",
						"secondaryReplica": "[concat(parameters('sqlNamePrefix'),'0')]",
						"dnsServerName": "[parameters('dnsServerName')]",
						"adminCreds": {
							"userName": "[parameters('adminUserName')]",
							"password": "PrivateSettingsRef:adminPassword"
						},
						"sqlServiceCreds": {
							"userName": "[parameters('sqlServerServiceAccountUserName')]",
							"password": "PrivateSettingsRef:sqlServerServiceAccountPassword"
						}
					}
				},
				"protectedSettings": {
					"items": {
						"adminPassword": "[parameters('adminPassword')]",
						"sqlServerServiceAccountPassword": "[parameters('sqlServerServiceAccountPassword')]"
					}
				}
			}
		}
  ],
    "outputs": {
    }
}
